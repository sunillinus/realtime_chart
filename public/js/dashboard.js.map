{"version":3,"sources":["webpack:///webpack/bootstrap a0fc0f9edb6c29ebba1a","webpack:///./src/js/dashboard.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wC;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,MAAK;AACL;;AAEA;AACA,MAAK,8CAA8C;AACnD,MAAK,kDAAkD;AACvD,MAAK,iDAAiD;AACtD,MAAK,kDAAkD;AACvD,MAAK;AACL;;AAEA;AACA,MAAK,8CAA8C;AACnD,MAAK,kDAAkD;AACvD,MAAK,iDAAiD;AACtD,MAAK,kDAAkD;AACvD,MAAK;AACL;;AAEA;AACA,MAAK,8CAA8C;AACnD,MAAK,kDAAkD;AACvD,MAAK,iDAAiD;AACtD,MAAK,kDAAkD;AACvD,MAAK;AACL;AACA;;AAEA;AACA;AACA,sDAAqD,gBAAgB;AACrE;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA,yDAAwD,4BAA4B,gBAAgB;AACpG;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL,iFAAgF,SAAS,8BAA8B,EAAE,EAAE;;AAE3H;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,IAAG,E;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,WAAW,iBAAiB;AACrC,UAAS;AACT;AACA,sBAAqB,2BAA2B;AAChD,wBAAuB,4BAA4B;AACnD,uBAAsB;AACtB;AACA;AACA,UAAS;AACT,UAAS,aAAa,UAAU,aAAa,eAAe,aAAa,EAAE,EAAE;AAC7E,UAAS,YAAY,gBAAgB;AACrC;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,UAAU,GAAG,QAAQ;AAC9C;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA,sB;AACA;AACA;AACA;AACA,QAAO,YAAY,UAAU,wCAAwC,eAAe,cAAc;AAClG,QAAO,aAAa,2EAA2E;AAC/F,QAAO,WAAW,sBAAsB,kBAAkB,kBAAkB,UAAU;AACtF;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA,kDAAiD,iCAAiC,EAAE;AACpF;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA,sBAAqB,YAAY,MAAM,QAAQ,GAAG,qBAAqB;AACvE,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,WAAW,OAAO,QAAQ,GAAG,qBAAqB;AACzE;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO,WAAW,iBAAiB,kBAAkB;AACrD,QAAO,WAAW,QAAQ,mDAAmD;AAC7E,QAAO,WAAW,QAAQ,sBAAsB,cAAc,eAAe;AAC7E,QAAO,aAAa;AACpB;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;;AAEL,oDAAmD,+BAA+B,EAAE;AACpF;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO,WAAW,2BAA2B,kBAAkB;AAC/D,QAAO,WAAW,QAAQ,8EAA8E;AACxG,QAAO,WAAW,QAAQ,wDAAwD,cAAc,eAAe;AAC/G,QAAO,aAAa;AACpB;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;;AAEL,oDAAmD,kCAAkC,EAAE;AACvF;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a0fc0f9edb6c29ebba1a\n **/","var MSAnalyticsConfig = {\n  serviceUrl: 'http://multiscreen.samsung.com/analyticsservice/v1',\n  \n  eventsList: {\n    serviceStart: 'Service Starts',\n    serviceStop: 'Service Stops',\n    installApplication: 'App Installs',\n    launchApplication: 'App Launches',\n    terminateApplication: 'App Terminates',\n    channelSession: 'Channel Sessions',\n    clientSession: 'Client Sessions'\n  },\n\n  uniqueStatsList: [\n    {type: 'serviceStart', field: 'device_duid', label: 'Unique TVs'}\n  ],\n\n  totalStatsList: [\n    {type: 'serviceStart', label: 'Service Starts'},\n    {type: 'installApplication', label: 'App Installs'},\n    {type: 'launchApplication', label: 'App Launches'},\n    {type: 'channelSession', label: 'Channel Sessions'},\n    {type: 'clientSession', label: 'Client Sessions'}\n  ],\n\n  dailyStatsList: [\n    {type: 'serviceStart', label: 'Service Starts'},\n    {type: 'installApplication', label: 'App Installs'},\n    {type: 'launchApplication', label: 'App Launches'},\n    {type: 'channelSession', label: 'Channel Sessions'},\n    {type: 'clientSession', label: 'Client Sessions'}\n  ],\n\n  countryStatsList: [\n    {type: 'serviceStart', label: 'Service Starts'},\n    {type: 'installApplication', label: 'App Installs'},\n    {type: 'launchApplication', label: 'App Launches'},\n    {type: 'channelSession', label: 'Channel Sessions'},\n    {type: 'clientSession', label: 'Client Sessions'}\n  ]\n};\n\nfunction totalStats() {\n  _.each(MSAnalyticsConfig.totalStatsList, function(e) {\n    $.post(MSAnalyticsConfig.serviceUrl + '/count', {\"type\": e.type }, function(data) {\n      $('#total-' + e.type + 's').text(data.results);\n    });\n  });\n}\n\nfunction uniqueStats() {\n  _.each(MSAnalyticsConfig.uniqueStatsList, function(e) {\n    $.post(MSAnalyticsConfig.serviceUrl + '/distinct', {\"field\": e.field, \"query\": {\"type\": e.type}}, function(data) {\n      $('#unique-' + e.type + 's').text(data.results.length);\n    });\n  });\n}\n\nfunction initDailyChart() {\n  //Set up the chart  \n  $('#daily-chart').highcharts({\n    chart: {\n      type: 'spline',\n      zoomType: 'x',\n      minRange: 14 * 24 * 3600000 // fourteen days\n    },\n\n    title: {\n      text: 'Daily Activty'\n    },\n\n    // series: _.map(MSAnalyticsConfig.eventsList, function(value, key , list) { return({name: value['name'], data: []}); }),\n\n    xAxis: {\n      type: 'datetime',\n      dateTimeLabelFormats: {\n        month: '%e. %b',\n        year: '%b'\n      },\n      title: {\n        text: 'Date'\n      }\n    },\n\n    yAxis: {\n      type: 'linear'\n    },\n\n    tooltip: {\n      shared: true,\n      crosshairs: true\n    }\n  });  \n}\n\nfunction dailyStats() {\n  initDailyChart();\n  var dailyChart = $('#daily-chart').highcharts();\n  _.each(MSAnalyticsConfig.dailyStatsList, function(e) {\n    $.ajax({\n      url: MSAnalyticsConfig.serviceUrl + '/aggregate',\n      data: JSON.stringify([\n        {\"$match\": {\"type\" : e.type}},\n        {\"$project\" : {\n          \"day\": {\n            \"year\": { \"$year\" : \"$createdTime\" },\n            \"month\" : { \"$month\" : \"$createdTime\" },\n            \"date\" : { \"$dayOfMonth\" : \"$createdTime\" }\n            }\n          }\n        },\n        { \"$group\" : { \"_id\" : {\"day\":\"$day\"} , \"number\" : { \"$sum\" : 1 } } },\n        { \"$sort\" : { \"_id.day\" : 1 } }\n      ]),\n      type: 'POST',\n        processData: false,\n        contentType: 'application/json'\n    })\n    .done(function(data) {\n      var dataPoints = _.map(data.results, function(result) {\n        return [Date.UTC(result._id.day.year, result._id.day.month - 1, result._id.day.date), result.number];\n      });\n      dailyChart.addSeries({\n        name: e.label,\n        data: dataPoints\n      });\n    });\n  });\n}\n\nfunction initCountriesMap() {\n  // data = data.results;\n  /* global Highcharts */ // JSHint needs this comment\n  var mapData = Highcharts.geojson(Highcharts.maps['custom/world']);\n  $('#countries-map').highcharts('Map', {\n    chart : {\n      borderWidth : 1\n    },\n\n    title: {\n      text: 'Activity by Country'\n    },\n\n    subtitle : {\n      // text : 'Demo of Highcharts map with bubbles'\n    },\n\n    tooltip: {\n      formatter: function () {\n        var s = '<b>' + this.point.name + '</b><br>' + 'Total Events: ' + this.point.z + '<br>';\n        _.each(this.point.eventTypes, function(eventType) {\n          s += MSAnalyticsConfig.eventsList[eventType.type] + ': ' + eventType.number + '<br>';\n        });\n        return s;\n      }\n    },\n\n    legend: {\n      enabled: false\n    },\n\n    mapNavigation: {\n      enabled: false,\n      buttonOptions: {\n        verticalAlign: 'bottom'\n      }\n    },\n\n    series : [{\n      name: 'Countries',\n      mapData: mapData,\n      color: '#E0E0E0',\n      enableMouseTracking: false\n    }, {\n        type: 'mapbubble',\n        mapData: mapData,\n        name: 'Event Count',\n        joinBy: ['iso-a2', '_id'],\n        // data: data,\n        minSize: 4,\n        maxSize: '12%',\n        tooltip: {\n          pointFormat: '{point._id}: {point.z}'\n        }\n      }\n    ]\n  });\n}\n\nfunction countryStats() {\n  initCountriesMap();  \n  $.ajax({\n    url: MSAnalyticsConfig.serviceUrl + '/aggregate',\n    data: JSON.stringify([\n      {\"$group\" : { \"_id\" : {\"code\": \"$countryCode\", \"type\": \"$type\"} , \"number\" : { \"$sum\" : 1}}},\n      {\"$project\": {\"_id\": 0, \"code\" : \"$_id.code\", \"type\": \"$_id.type\", \"number\" : \"$number\"}},\n      {\"$group\": {\"_id\": \"$code\", \"z\": {\"$sum\": \"$number\"}, \"eventTypes\" : {\"$push\": {\"type\": \"$type\", \"number\": \"$number\"}}}}\n    ]),\n    type: 'POST',\n      processData: false,\n      contentType: 'application/json'\n  })\n  .done(function(data) {\n    // Correct UK to GB in data\n    // and assign null to NA-mibia!\n    $.each(data.results, function () {\n      if (this._id === 'UK') {\n        this._id = 'GB';\n      } else if (this._id === null) {\n        this._id = 'NA';\n      }\n    });\n\n    var map = $('#countries-map').highcharts();\n    var series = _.find(map.series, function(s) { return s.name === 'Event Count'; });\n    series.setData(data.results);\n  });\n}\n\nfunction initPieChart(domId, name) {\n  // Build the chart\n  $(domId).highcharts({\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false\n    },\n    title: {\n      text: name\n    },\n    tooltip: {\n      pointFormat: '{series.name}: <b>{point.y} ({point.percentage:.1f}%)</b>'\n    },\n    plotOptions: {\n      pie: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        dataLabels: {\n          enabled: true,\n          format: '<b>{point.name}</b>: {point.y} ({point.percentage:.1f} %)',\n          style: {\n            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\n          }\n        },\n        // showInLegend: true\n      }\n    },\n    series: [{\n      type: 'pie',\n      name: name\n    }]\n  });\n  return $(domId).highcharts();\n}\n\nfunction modelStats(domId) {\n  var chart = initPieChart('#tv-model-chart', 'TV Models');\n  $.ajax({\n    url: MSAnalyticsConfig.serviceUrl + '/aggregate',\n    data: JSON.stringify([\n      {\"$match\": {\"device_model\": {\"$exists\": true}}},\n      {\"$group\": {\"_id\": {\"duid\": \"$device_duid\", \"model\": \"$device_model\"}}},\n      {\"$group\": {\"_id\": {\"model\": \"$_id.model\"}, \"number\" : { \"$sum\" : 1 }}},\n      {\"$project\": {\"_id\": 0, \"model\" : \"$_id.model\", \"number\" : \"$number\"}}\n    ]),\n    type: 'POST',\n      processData: false,\n      contentType: 'application/json'\n  })\n  .done(function(data) {\n    var dataPoints = _.map(data.results, function(result) {\n      return [result.model, result.number];\n    });\n\n    var series = _.find(chart.series, function(s) { return s.name === 'TV Models'; });\n    series.setData(dataPoints);\n  });\n}\n\nfunction firmwareStats(domId) {\n  var chart = initPieChart('#tv-firmware-chart', 'TV Firmwares');\n  $.ajax({\n    url: MSAnalyticsConfig.serviceUrl + '/aggregate',\n    data: JSON.stringify([\n      {\"$match\": {\"device_firmwareVersion\": {\"$exists\": true}}},\n      {\"$group\": {\"_id\": {\"duid\": \"$device_duid\", \"device_firmwareVersion\": \"$device_firmwareVersion\"}}},\n      {\"$group\": {\"_id\": {\"device_firmwareVersion\": \"$_id.device_firmwareVersion\"}, \"number\" : { \"$sum\" : 1 }}},\n      {\"$project\": {\"_id\": 0, \"device_firmwareVersion\" : \"$_id.device_firmwareVersion\", \"number\" : \"$number\"}}\n    ]),\n    type: 'POST',\n      processData: false,\n      contentType: 'application/json'\n  })\n  .done(function(data) {\n    var dataPoints = _.map(data.results, function(result) {\n      return [result.device_firmwareVersion, result.number];\n    });\n\n    var series = _.find(chart.series, function(s) { return s.name === 'TV Firmwares'; });\n    series.setData(dataPoints);\n  });\n}\n\n$(document).ready(function() {\n  uniqueStats();\n  totalStats();\n  dailyStats();\n  countryStats();\n  modelStats();\n  firmwareStats();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/dashboard.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":"","file":"dashboard.js"}